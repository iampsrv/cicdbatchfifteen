name: cicd workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
        # python-version: ["pypy3.9", "pypy3.10", "3.9", "3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    # - name: Set up Python 3.10
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r requirements.txt
        touch /home/runner/work/cicdbatchfifteen/cicdbatchfifteen/pranjal.txt
    - name: Upload pranjal txt file
      uses: actions/upload-artifact@v3
      with:
        name: pranjaltext
        path: /home/runner/work/cicdbatchfifteen/cicdbatchfifteen/pranjal.txt
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
        
    - name: Test with pytest
      run: pytest --doctest-modules --junitxml=junit/test-results.xml

    - name: Upload pytest test results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results
        path: junit/test-results.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
      continue-on-error: true
      
    - name: Mandatory step
      run: echo "Done"
      
  build-and-push-docker-image-to-dockerhub:
    runs-on: ubuntu-latest   
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Extract commit SHA
        shell: bash
        run: echo "##[set-output name=sha;]$(echo ${GITHUB_SHA::8})"
        id: extract_sha
        
      - name: Build and Push docker image to docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: psrv3/cicdbatchfifteenga
          tags: ${{ steps.extract_branch.outputs.branch }}-${{ steps.extract_sha.outputs.sha }}
          # tag_with_ref: true
          
  build-and-push-docker-image-to-github-packages:
    runs-on: ubuntu-latest 
    permissions: 
      contents: read
      packages: write 
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build container image
      uses: docker/build-push-action@v1
      with: 
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        repository: ${{ github.repository }}/cicdbatchfifteenga
        tag_with_sha: true
        tag_with_ref: true
